describe('Onboarding App', () => {
    beforeEach(() => {
        cy.visit('http://localhost:3000/')
    })

    const nameInput = () => cy.get('input[name=name]')
    const emailInput = () => cy.get('input[name=email')
    const passwordInput = () => cy.get('input[name=password]')     
    const tosBox = () => cy.get('input[id=terms-of-service]')
    const submitButton = () => cy.get('button[id=submitButton]')

    it('sanity check', () => {
        expect(2+2).to.equal(4)
        expect(754*345235).not.to.equal(42)
    })

    it('Elements exist', () => {
        nameInput().should('exist')
        emailInput().should('exist')
        passwordInput().should('exist')
        tosBox().should('exist')
        submitButton().should('exist')
    })

    it('Can type text into input boxes and check the checkbox', () => {
        nameInput()
            .should('have.value', '')
            .type('Steven Segal')
            .should('have.value', 'Steven Segal')
        emailInput()
            .should('have.value', '')
            .type('thepianoman@gmail.com')
            .should('have.value', 'thepianoman@gmail.com')
        passwordInput()
            .should('have.value', '')
            .type('1234')
            .should('have.value', '1234')
        tosBox()
            .should('not.be.checked')
            .click()
            .should('be.checked')
            .click()
            .should('not.be.checked')
    })
    it('Submit button is enabled/disabled correctly based on form validation and can submit form data', () =>{
        submitButton().should('be.disabled')
        nameInput().type('Vassily Johnson')
        submitButton().should('be.disabled')
        emailInput().type('beastlyjohnson@hotmail.com')
        submitButton().should('be.disabled')
        passwordInput().type('nthgthdgdcrtdtrk')
        submitButton().should('be.enabled')
        tosBox().click()
        submitButton().click()
        nameInput().should('have.value', '')
        emailInput().should('have.value', '')
        passwordInput().should('have.value', '')
        submitButton().should('be.disabled')
        tosBox().should('not.be.checked')
    })
})